// <auto-generated />
using System;
using EmployeeManagement.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagement.DataAccess.Migrations
{
    [DbContext(typeof(AplicationDBContext))]
    [Migration("20250601120030_InitialDBScripts")]
    partial class InitialDBScripts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManagement.Models.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("IFSCCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("BankAccounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNumber = "1234567890",
                            AccountType = "Savings",
                            BankName = "HDFC Bank",
                            BranchName = "Mumbai Main",
                            CreatedOn = new DateTime(2024, 12, 1, 5, 0, 28, 803, DateTimeKind.Local).AddTicks(4188),
                            Currency = "INR",
                            EmployeeId = 1,
                            IFSCCode = "HDFC0001234",
                            IsActive = 1
                        },
                        new
                        {
                            Id = 2,
                            AccountNumber = "9876543210",
                            AccountType = "Current",
                            BankName = "State Bank of India",
                            BranchName = "Delhi Branch",
                            CreatedOn = new DateTime(2024, 6, 1, 5, 0, 28, 803, DateTimeKind.Local).AddTicks(4303),
                            Currency = "INR",
                            EmployeeId = 2,
                            IFSCCode = "SBIN0005678",
                            IsActive = 1
                        },
                        new
                        {
                            Id = 3,
                            AccountNumber = "1122334455",
                            AccountType = "Savings",
                            BankName = "ICICI Bank",
                            BranchName = "Pune Central",
                            CreatedOn = new DateTime(2024, 6, 1, 5, 0, 28, 803, DateTimeKind.Local).AddTicks(4316),
                            Currency = "INR",
                            EmployeeId = 3,
                            IFSCCode = "ICIC0002468",
                            IsActive = 0
                        },
                        new
                        {
                            Id = 4,
                            AccountNumber = "5566778899",
                            AccountType = "Current",
                            BankName = "Axis Bank",
                            BranchName = "Chennai South",
                            CreatedOn = new DateTime(2025, 5, 2, 5, 0, 28, 803, DateTimeKind.Local).AddTicks(4329),
                            Currency = "INR",
                            EmployeeId = 1,
                            IFSCCode = "UTIB0007890",
                            IsActive = 1
                        },
                        new
                        {
                            Id = 5,
                            AccountNumber = "BOA99887766",
                            AccountType = "Checking",
                            BankName = "Bank of America",
                            BranchName = "New York HQ",
                            CreatedOn = new DateTime(2023, 6, 1, 5, 0, 28, 803, DateTimeKind.Local).AddTicks(4341),
                            Currency = "USD",
                            EmployeeId = 2,
                            IFSCCode = "BOFA0USA123",
                            IsActive = 1
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Location = "New York",
                            Name = "Human Resources"
                        },
                        new
                        {
                            Id = 2,
                            Location = "Chicago",
                            Name = "Finance"
                        },
                        new
                        {
                            Id = 3,
                            Location = "San Francisco",
                            Name = "IT"
                        },
                        new
                        {
                            Id = 4,
                            Location = "Los Angeles",
                            Name = "Marketing"
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 29,
                            DepartmentId = 1,
                            Name = "Alice Johnson",
                            Salary = 75000.00m
                        },
                        new
                        {
                            Id = 2,
                            Age = 35,
                            DepartmentId = 2,
                            Name = "Bob Smith",
                            Salary = 62000.00m
                        },
                        new
                        {
                            Id = 3,
                            Age = 42,
                            DepartmentId = 3,
                            Name = "Carol Davis",
                            Salary = 88000.00m
                        },
                        new
                        {
                            Id = 4,
                            Age = 31,
                            DepartmentId = 4,
                            Name = "David Lee",
                            Salary = 54000.00m
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Models.BankAccount", b =>
                {
                    b.HasOne("EmployeeManagement.Models.Employee", "Employees")
                        .WithMany("BankAccounts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EmployeeManagement.Models.Employee", b =>
                {
                    b.HasOne("EmployeeManagement.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EmployeeManagement.Models.Employee", b =>
                {
                    b.Navigation("BankAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
